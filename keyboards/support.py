# keyboards/support.py
"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏, FAQ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
"""

import logging
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from logger import get_logger
logger = get_logger('keyboards')

async def create_faq_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É FAQ."""
    try:
        keyboard = [
            [InlineKeyboardButton(text="üì∏ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ç–æ?", callback_data="faq_photo")],
            [InlineKeyboardButton(text="üé¨ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ?", callback_data="faq_video")],
            [InlineKeyboardButton(text="üë§ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä?", callback_data="faq_avatar")],
            [InlineKeyboardButton(text="üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–º–ø—Ç–∞–º", callback_data="faq_prompts")],
            [InlineKeyboardButton(text="‚ùì –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã", callback_data="faq_problems")],
            [InlineKeyboardButton(text="üíé –û –ø–æ–¥–ø–∏—Å–∫–µ", callback_data="faq_subscription")],
            [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ create_faq_keyboard: {e}", exc_info=True)
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
        ])

async def create_support_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏."""
    try:
        keyboard = [
            [InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url="https://t.me/AXIDI_Help")],
            [InlineKeyboardButton(text="‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
            [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ create_support_keyboard: {e}", exc_info=True)
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
        ])

async def create_referral_keyboard(user_id: int, bot_username: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    try:
        referral_link = f"t.me/{bot_username}?start=ref_{user_id}"

        keyboard = [
            [InlineKeyboardButton(text="üéÅ –ü–æ–ª—É—á–∞–π –ø–µ—á–µ–Ω—å–∫–∏ –∑–∞ –¥—Ä—É–≥–∞!", callback_data="ignore")],
            [
                InlineKeyboardButton(
                    text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π",
                    url=f"https://t.me/share/url?url={referral_link}&text=–ü–æ–ø—Ä–æ–±—É–π —ç—Ç–æ—Ç –∫—Ä—É—Ç–æ–π –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è AI —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ! –ü–æ–ª—É—á–∏ –±–æ–Ω—É—Å–Ω—ã–µ –ø–µ—á–µ–Ω—å–∫–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!"
                )
            ],
            [InlineKeyboardButton(text="üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", callback_data="copy_referral_link")],
            [InlineKeyboardButton(text="üìä –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="my_referrals")],
            [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ create_referral_keyboard –¥–ª—è user_id={user_id}: {e}", exc_info=True)
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]) 
