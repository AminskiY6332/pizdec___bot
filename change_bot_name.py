#!/usr/bin/env python3
"""
–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram Bot API
–ê–≤—Ç–æ—Ä: AXIDI
"""

import asyncio
import aiohttp
import sys

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7778101895:AAF1pdK3KWIPH32Or-71gAWltwvBrZAtUr4"

# –ù–æ–≤–æ–µ –∏–º—è –±–æ—Ç–∞
NEW_BOT_NAME = "PixelPie by AXIDI üç™ –ù–ï–ô–†–û–§–û–¢–û–°–ï–°–°–ò–Ø"

async def set_bot_name(token: str, name: str) -> bool:
    """
    –ò–∑–º–µ–Ω—è–µ—Ç –∏–º—è –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram Bot API

    Args:
        token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        name: –ù–æ–≤–æ–µ –∏–º—è –±–æ—Ç–∞

    Returns:
        bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    url = f"https://api.telegram.org/bot{token}/setMyName"

    data = {
        "name": name
    }

    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(url, data=data) as response:
                result = await response.json()

                if response.status == 200 and result.get("ok"):
                    print(f"‚úÖ –ò–º—è –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: '{name}'")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –±–æ—Ç–∞:")
                    print(f"   Status: {response.status}")
                    print(f"   Response: {result}")
                    return False

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}")
        return False

async def get_current_bot_info(token: str):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ

    Args:
        token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
    """
    url = f"https://api.telegram.org/bot{token}/getMe"

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                result = await response.json()

                if response.status == 200 and result.get("ok"):
                    bot_info = result["result"]
                    print(f"üìã –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:")
                    print(f"   ID: {bot_info.get('id')}")
                    print(f"   Username: @{bot_info.get('username')}")
                    print(f"   –ò–º—è: {bot_info.get('first_name', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}")
                    print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {bot_info.get('description', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}")
                    return bot_info
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {result}")
                    return None

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
        return None

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞"""
    print("ü§ñ –°–∫—Ä–∏–ø—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –±–æ—Ç–∞ AXIDI")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
    current_info = await get_current_bot_info(BOT_TOKEN)

    if not current_info:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.")
        sys.exit(1)

    print()

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print(f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –Ω–∞: '{NEW_BOT_NAME}'")
    print()

    # –ò–∑–º–µ–Ω—è–µ–º –∏–º—è –±–æ—Ç–∞
    success = await set_bot_name(BOT_TOKEN, NEW_BOT_NAME)

    if success:
        print()
        print("üéâ –ò–º—è –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
        await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        updated_info = await get_current_bot_info(BOT_TOKEN)

        if updated_info and updated_info.get('first_name') == NEW_BOT_NAME:
            print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!")
        else:
            print("‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è, –Ω–æ –∑–∞–ø—Ä–æ—Å –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º")

    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –±–æ—Ç–∞")
        sys.exit(1)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞...")
    asyncio.run(main())
    print("‚ú® –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
