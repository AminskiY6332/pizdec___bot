#!/bin/bash

# ================================================================
# AXIDI BOT - STATUS CHECK SCRIPT
# ================================================================

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}================================================================${NC}"
echo -e "${CYAN}üìä AXIDI PHOTO AI BOT - STATUS${NC}"
echo -e "${CYAN}================================================================${NC}"

cd /root/axidi_pr_v1

# Check processes
echo -e "${BLUE}üîç Process Status:${NC}"
echo -e "${BLUE}=================================${NC}"

# –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π webhook (–±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π Gunicorn)
GUNICORN_PIDS=$(pgrep -f "gunicorn.*main:app" 2>/dev/null || true)
if [ ! -z "$GUNICORN_PIDS" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –°—Ç–∞—Ä—ã–π Gunicorn: –û–±–Ω–∞—Ä—É–∂–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –ø—Ä–æ—Ü–µ—Å—Å (PID: $GUNICORN_PIDS) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å${NC}"
else
    echo -e "${GREEN}‚úÖ Gunicorn: –ù–µ –∑–∞–ø—É—â–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π webhook)${NC}"
fi

# Telegram Bot —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º webhook
TELEGRAM_PIDS=$(pgrep -f "python.*main.py" 2>/dev/null || true)
if [ ! -z "$TELEGRAM_PIDS" ]; then
    echo -e "${GREEN}‚úÖ Telegram Bot + Webhook: Running (PID: $TELEGRAM_PIDS)${NC}"
    echo -e "${GREEN}   üì° –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π aiohttp webhook –Ω–∞ –ø–æ—Ä—Ç—É 8000${NC}"
else
    echo -e "${RED}‚ùå Telegram Bot + Webhook: Not running${NC}"
fi

# Network status
echo -e "${BLUE}üåê Network Status:${NC}"
echo -e "${BLUE}=================================${NC}"

# Port 8000 (–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π aiohttp webhook)
if netstat -tulpn | grep -q ":8000.*LISTEN"; then
    PORT_INFO=$(netstat -tulpn | grep ":8000.*LISTEN")
    PROCESS_INFO=$(echo "$PORT_INFO" | awk '{print $7}')
    echo -e "${GREEN}‚úÖ Port 8000: Listening (aiohttp webhook)${NC}"
    echo -e "${YELLOW}   Process: $PROCESS_INFO${NC}"
    echo -e "${YELLOW}   $PORT_INFO${NC}"
else
    echo -e "${RED}‚ùå Port 8000: Not listening${NC}"
fi

# Service status
echo -e "${BLUE}üß™ Service Health:${NC}"
echo -e "${BLUE}=================================${NC}"

# Health check
if curl -s http://localhost:8000/health > /dev/null 2>&1; then
    HEALTH_RESPONSE=$(curl -s http://localhost:8000/health)
    if echo "$HEALTH_RESPONSE" | grep -q '"status":"ok"'; then
        echo -e "${GREEN}‚úÖ Health Endpoint: OK${NC}"
        echo -e "${YELLOW}   Response: $HEALTH_RESPONSE${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Health Endpoint: Responding but status unknown${NC}"
        echo -e "${YELLOW}   Response: $HEALTH_RESPONSE${NC}"
    fi
else
    echo -e "${RED}‚ùå Health Endpoint: Not responding${NC}"
fi

# Webhook test
WEBHOOK_RESPONSE=$(curl -s -w "%{http_code}" -X POST http://localhost:8000/webhook \
    -H "Content-Type: application/json" \
    -d '{"test":"status_check"}' 2>/dev/null || echo "000")

if [ "$WEBHOOK_RESPONSE" != "000" ]; then
    echo -e "${GREEN}‚úÖ Webhook Endpoint: Responding (HTTP $WEBHOOK_RESPONSE)${NC}"
else
    echo -e "${RED}‚ùå Webhook Endpoint: Not responding${NC}"
fi

# Environment check
echo -e "${BLUE}‚öôÔ∏è Environment:${NC}"
echo -e "${BLUE}=================================${NC}"

# Load environment
if [ -f .env ]; then
    source .env
    echo -e "${GREEN}‚úÖ Environment: Loaded from .env${NC}"
elif [ -f .bs ]; then
    source .bs
    echo -e "${GREEN}‚úÖ Environment: Loaded from .bs${NC}"
else
    echo -e "${RED}‚ùå Environment: No config file found${NC}"
fi

# Check critical variables
if [ ! -z "$TELEGRAM_BOT_TOKEN" ]; then
    echo -e "${GREEN}‚úÖ TELEGRAM_BOT_TOKEN: Set (${TELEGRAM_BOT_TOKEN:0:10}...)${NC}"
else
    echo -e "${RED}‚ùå TELEGRAM_BOT_TOKEN: Not set${NC}"
fi

if [ ! -z "$YOOKASSA_SHOP_ID" ]; then
    echo -e "${GREEN}‚úÖ YOOKASSA_SHOP_ID: Set ($YOOKASSA_SHOP_ID)${NC}"
else
    echo -e "${RED}‚ùå YOOKASSA_SHOP_ID: Not set${NC}"
fi

# Logs status
echo -e "${BLUE}üìã Recent Activity:${NC}"
echo -e "${BLUE}=================================${NC}"

# Bot logs
if [ -f "./logs/telegram_bot.log" ]; then
    echo -e "${GREEN}‚úÖ Bot logs available${NC}"
    echo -e "${YELLOW}   Last 3 log entries:${NC}"
    tail -3 ./logs/telegram_bot.log | while read line; do
        echo -e "${YELLOW}   > $line${NC}"
    done
else
    echo -e "${RED}‚ùå Bot logs not found${NC}"
fi

# Webhook logs (–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –ª–æ–≥–∏ –±–æ—Ç–∞)
echo -e "${GREEN}‚úÖ Webhook logs: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –ª–æ–≥–∏ –±–æ—Ç–∞${NC}"
if grep -q "aiohttp.access" ./logs/telegram_bot.log 2>/dev/null; then
    echo -e "${GREEN}   Recent webhook activity:${NC}"
    grep "aiohttp.access" ./logs/telegram_bot.log | tail -2 | while read line; do
        echo -e "${YELLOW}   > $line${NC}"
    done
else
    echo -e "${YELLOW}   No recent webhook activity${NC}"
fi

# Overall status
echo -e "${CYAN}================================================================${NC}"

if [ ! -z "$TELEGRAM_PIDS" ] && netstat -tulpn | grep -q ":8000.*LISTEN"; then
    echo -e "${GREEN}üéâ SYSTEM STATUS: FULLY OPERATIONAL${NC}"
    echo -e "${GREEN}üöÄ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç —Å webhook –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
    echo -e "${GREEN}‚ö° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞${NC}"
elif [ ! -z "$TELEGRAM_PIDS" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è SYSTEM STATUS: BOT RUNNING, WEBHOOK CHECK NEEDED${NC}"
    echo -e "${YELLOW}Bot –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ –ø–æ—Ä—Ç 8000 –Ω–µ —Å–ª—É—à–∞–µ—Ç${NC}"
else
    echo -e "${RED}‚ùå SYSTEM STATUS: NOT RUNNING${NC}"
    echo -e "${YELLOW}Use ./start.sh to start the integrated system${NC}"
fi

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö
if [ ! -z "$GUNICORN_PIDS" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ Gunicorn –ø—Ä–æ—Ü–µ—Å—Å—ã${NC}"
    echo -e "${YELLOW}   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö: pkill -f 'gunicorn.*main:app'${NC}"
fi

echo -e "${CYAN}================================================================${NC}"

echo -e "${YELLOW}üìã Management Commands:${NC}"
echo -e "‚Ä¢ Start: ${GREEN}./start.sh${NC}"
echo -e "‚Ä¢ Stop: ${GREEN}./stop.sh${NC}"
echo -e "‚Ä¢ Restart: ${GREEN}./restart.sh${NC}"
echo -e "‚Ä¢ Debug: ${GREEN}./debug.sh${NC}"
echo -e "‚Ä¢ Backup: ${GREEN}./backup.sh${NC}"
